services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: business_exchange
      MYSQL_USER: app
      MYSQL_PASSWORD: app_password
      TZ: Asia/Hong_Kong
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./scripts/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 15s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 15s
      retries: 10

  backend:
    build:
      context: ./business_exchange_marketplace
      dockerfile: Dockerfile.dev
      # target: dev 
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      APP_ENV: development
      APP_PORT: 8080
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: app
      DB_PASSWORD: app_password
      DB_NAME: business_exchange
      REDIS_ADDR: redis:6379
      REDIS_DB: 0
      REDIS_PASSWORD: ""
      JWT_SECRET: changeme-super-secret
      JWT_ISSUER: trade_company
      JWT_EXPIRE_MINUTES: 60
      TZ: Asia/Hong_Kong
    ports:
      - "8080:8080"
    volumes:
      # For development: mount source code for hot reload
      - ./business_exchange_marketplace:/app
      - /app/bin

  frontend:
    build:
      context: ./business_exchange_marketplace_frontend
      dockerfile: Dockerfile.dev
      # target: dev
    command: ["npm", "run", "dev"]
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - auction
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      # 下兩行能讓 Hot Reload 在各種環境更穩（WSL/VM/網路檔案系統請務必保留）
      - CHOKIDAR_USEPOLLING=1
      - WATCHPACK_POLLING=true
      # 依你的後端而定
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_AUCTION_API_URL=http://localhost:8081
    volumes:
      # 程式碼雙向同步（Hot Reload）
      - ./business_exchange_marketplace_frontend:/app
      # 依賴放在命名 volume，避免每次 build 重裝（首次啟動會自動 npm ci）
      - frontend_node_modules:/app/node_modules
      # Next.js 編譯快取，重啟更快
      - frontend_next_cache:/app/.next/cache
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/api/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 6
      start_period: 20s
    # 如需自動重啟再打開
    # restart: unless-stopped

  auction:
    build:
      context: ./business_exchange_marketplace_auction
      dockerfile: Dockerfile.dev
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      APP_ENV: development
      APP_PORT: 8081
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: app
      DB_PASSWORD: app_password
      DB_NAME: business_exchange
      REDIS_HOST: redis:6379
      REDIS_DB: 1
      REDIS_PASSWORD: ""
      JWT_SECRET: changeme-super-secret
      JWT_ISSUER: trade_company
      JWT_EXPIRE_MINUTES: 60
      TZ: Asia/Hong_Kong
    ports:
      - "8081:8081"
    volumes:
      # For development: mount source code for hot reload
      - ./business_exchange_marketplace_auction:/app
      - /app/bin
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8081/healthz || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  adminer:
    image: adminer:4
    ports:
      - "8082:8080"
    depends_on:
      - mysql

volumes:
  db_data:
  frontend_node_modules:
  frontend_next_cache:
